spring.application.name=order-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=99@QWERkim611
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


server.port=8081

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
#uri for eureka server
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka

# Enable actuator for management
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true



# Resilience4j properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j timeout properties
resilience4j.timeLimiter.instances.inventory.timeout-duration=2s

#Resilience4j retry properties
#resilience4j.retry.instances.inventory.max-attempts=3
#resilience4j.retry.instances.inventory.wait-duration=4s

# Enable tracing
management.tracing.enabled=true

# Configure the base URL of the Zipkin server
management.tracing.export.zipkin.endpoint=http://localhost:9411

# Configure the sampling probability (1.0 means 100% of the requests will be traced)
management.tracing.sampler.probability=1.0

spring.kafka.bootstrap.servers=localhost:9092
#kafka automatically configure in spring boot project

#add property
spring.kafka.template.default.topic=notificationTopic

#serialize notification to the kafka broker
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.producer.valueSerializer=org.springframework.kafka.support.serializer.JsonSerializer

logging.level.io.github.resilience4j.circuitbreaker.CircuitBreaker=DEBUG
logging.level.io.github.resilience4j.timelimiter.TimeLimiter=DEBUG
logging.level.org.springframework.web.reactive.function.client.WebClient=DEBUG
logging.level.com.microservice.v2.order_service.service.OrderService=DEBUG
